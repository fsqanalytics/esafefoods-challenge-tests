{
  "hash": "885bde624f7a0b9d85fb0aa23accbf66",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Fitting Secondary Models\"\nsubtitle: \"UNIT 7: Principles of predictive microbiology modelling (primary and secondary models)\"\ndate: \"April 2024\"\nauthor:\n  - name: Vasco Cadavez\n    affiliation:\n      - id: ipb\n        name: \"[Polytechnic Institute of Bragança (PT)](https://portal3.ipb.pt/index.php/pt/ipb)\"\n        department: Animal Science\n  - name: Ursula Gonzales-Barron\n    affiliation:\n      - ref: ipb\n        department: Mountain Research Center\n#footer:  \"Microbial Shelf Life Assessment Under New Societal Challenges\"\n#logo: images/logo.png\neditor: source\nformat: \n  revealjs:\n    height: 1000\n    width: 1500\n#    theme: sky\n#    theme: serif\n    multiplex: true\n    theme: [\"../css/slides.scss\"]\n    slide-number: c/t\n    incremental: false\n    title-slide-attributes:\n      data-background-image: ./images/background_title.jpg\n      data-background-size: contain\n    transition: fade\n    toc: true\n    toc-depth: 1\n    toc-title: Contents\n    number-sections: false\n    number-depth: 1\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n    embed-resources: true\nbibliography: ../files/esafefood.bib\nexecute:\n  freeze: auto\n---\n\n\n\n# Objectives {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n## Objectives {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n::: columns\n::: {.column width=\"45%\"}\nAfter reading the Unit, you shall be able to:\n\n1.  Identify the secondary growth models parameters\n\n2. check the data to select the adequate non-linear model \n\n3.  Fit a secondary growth model to experimental data and obtain parameter estimates\n\n4. Examine the fitting result\n\n5. Build plots with confidence and prediction intervals\n\n:::\n\n::: {.column width=\"45%\"}\n\n![](./images/sec_growth_temp.png){width=\"80%\"}\n:::\n:::\n\n\n# Introduction {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n## Secondary models {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-  Models that describe the influence of environmental factors on microbial growth rate can be generally classified as:\n\n- Arrhenius-type models\n- Belehradek-type\n- Square-root models\n- Cardinal parameter models\n\n- When adjusting a secondary model, using directly the untransformed growth rate response variable produces heterocedastic models\n- To obtain an adequate fitting, the growth rate values are often transformed by taking the natural logarithm in polynomial models, or the square root in Belehradek-type models\n\n# Software and data {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n## Data {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n- We have a series of growth rate values of salmonella in broth were extracted by fitting a primary model to different isothermal experiments\n\n- The data set contained in the file `salmonella.csv` lists the growth rate ($\\mu_{max}$) estimates in the column `GR` and the associated temperature ($Temp$) \n\n- By using the Cardinal model for temperature our task is to find the nominal minimum and maximum temperature for growth\n\n\n\n## R software {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   First, let's install the `predmicror` package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github('vcadavez/predmicror')\n```\n:::\n\n\n\n-   Now, install the `gslnls` package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"gslnls\")\n```\n:::\n\n\n\n-   Load the `predmicror` and `gslnls` packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(predmicror)\nlibrary(gslnls)\n```\n:::\n\n\n\n## Data {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n::: columns\n::: {.column width=\"45%\"}\n\n-   The [`salmonella.csv`](../data/salmonella.csv) file has three columns (`Temp`, `GR`  `sqrtGR`) and 29 observations\n    -   `Temp` is the temperature used to measure the growth rate\n    -   `GR` is the growth rate\n    -   `sqrtGR` is the square root of the growth rate\n\n- Lets read the `salmonella.csv` with the `read.csv()` function and save it as data frame (`df`)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(\"../data/salmonella.csv\", sep=\";\", header=TRUE)\n```\n:::\n\n\n:::\n\n::: {.column width=\"45%\"}\n-   Lets, check the dataset using the structure (`str()`) function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t26 obs. of  3 variables:\n $ Temp  : num  3.4 7.6 9.6 11.2 12.8 14.1 15.4 16.9 18.2 19.5 ...\n $ GR    : num  0.0003 0.0013 0.0017 0.0023 0.0026 0.0031 0.0042 0.0045 0.0059 0.0066 ...\n $ sqrtGR: num  0.018 0.036 0.041 0.048 0.051 0.056 0.065 0.067 0.077 0.081 ...\n```\n\n\n:::\n:::\n\n\n\n- We confirm that the data set is composed of 3 variables (columns)\n  - `Temp`: temperature\n  - `GR`: growth rate\n  - `sqrtGR`: square root of the growth rate\n:::\n:::\n\n## Data {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Check the data by plotting the **sqrtGR** against **Temperature**\n    -   We can observe a non-linear relationship\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(sqrtGR ~ Temp, data=df,\n     xlab=\"Temperature (ºC)\", ylab=\"Growth rate\")\n```\n\n::: {.cell-output-display}\n![](SecondaryGrowthModelsFit_files/figure-html/plot1-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Model fitting {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n## Cardinal model for temperature {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n- We will use the Cardinal model for temperature implemented in the `predmicror` package\n  - [https://fsqanalytics.github.io/predmicror/reference/CMTI.html](https://fsqanalytics.github.io/predmicror/reference/CMTI.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(predmicror)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n Please cite the 'predmicror' package as: \nVasco Cadavez and Ursula Gonzales-Barron  (2022). predmicror: Fitting predictive microbiology models in r \nIf you have questions, suggestions, or comments \nregarding the 'predmicror' package \nhttps://github.com/fsqanalytics/predmicror\n```\n\n\n:::\n\n```{.r .cell-code}\nCMTI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfunction (x, Tmax, Tmin, MUopt, Topt) \n{\n    if (!requireNamespace(\"gslnls\", quietly = TRUE)) {\n        stop(\"Package \\\"gslnls\\\" must be installed to use this function.\", \n            call. = FALSE)\n    }\n    CMT <- ifelse(x < Tmin | x > Tmax, 0, MUopt * (((x - Tmax) * \n        (x - Tmin)^2)/((Topt - Tmin) * ((Topt - Tmin) * (x - \n        Topt) - (Topt - Tmax) * (Topt + Tmin - 2 * x)))))\n    result <- sqrt(CMT)\n    return(result)\n}\n<bytecode: 0x64f6c9158a10>\n<environment: namespace:predmicror>\n```\n\n\n:::\n:::\n\n\n\n## Cardinal model for temperature {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Let's fit the model using the `gsl_nls()` function from the `gslnls` package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gslnls)\nfit <- gsl_nls(sqrtGR ~ CMTI(Temp,Tmax,Tmin,MUopt,Topt),\n               data=df,\n               start =  list(Tmax=42, Tmin=1, MUopt=1.0, Topt=37)\n               )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in sqrt(CMT): NaNs produced\nWarning in sqrt(CMT): NaNs produced\nWarning in sqrt(CMT): NaNs produced\nWarning in sqrt(CMT): NaNs produced\n```\n\n\n:::\n:::\n\n\n\n## Cardinal model for temperature {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Now we can summarise and inspect the fitting results by using the `summary()` function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFormula: sqrtGR ~ CMTI(Temp, Tmax, Tmin, MUopt, Topt)\n\nParameters:\n      Estimate Std. Error t value Pr(>|t|)    \nTmax  43.94402    0.47338  92.830  < 2e-16 ***\nTmin   1.20394    0.63427   1.898 0.070873 .  \nMUopt  0.10933    0.02691   4.063 0.000517 ***\nTopt  55.77113    3.01611  18.491 6.82e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.00461 on 22 degrees of freedom\n\nNumber of iterations to convergence: 21 \nAchieved convergence tolerance: 2.238e-07\n```\n\n\n:::\n:::\n\n\n\n-   Extract the model coefficients\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoefs <- coef(fit)\ncoefs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Tmax       Tmin      MUopt       Topt \n43.9440248  1.2039446  0.1093301 55.7711316 \n```\n\n\n:::\n:::\n\n\n\n## Cardinal model for temperature {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Extract the parameters confidence interval\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconfint(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        2.5 %     97.5 %\n1 42.96229414 44.9257554\n2 -0.11144969  2.5193390\n3  0.05352743  0.1651328\n4 49.51610924 62.0261540\n```\n\n\n:::\n:::\n\n\n\n-   Extract the fitted values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfits <- predict(fit, \n                interval = \"confidence\",\n                level = 0.95\n                )\nhead(fits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            fit         lwr        upr\n[1,] 0.01065436 0.005107446 0.01620128\n[2,] 0.03088672 0.026795852 0.03497758\n[3,] 0.04043941 0.036934663 0.04394416\n[4,] 0.04803522 0.044930357 0.05114007\n[5,] 0.05558346 0.052802663 0.05836427\n[6,] 0.06167655 0.059094217 0.06425888\n```\n\n\n:::\n:::\n\n\n\n## Cardinal model for temperature {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Convert the `fits` object in a data frame using the `data.frame()` function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfits <- data.frame(fits)\nstr(fits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t26 obs. of  3 variables:\n $ fit: num  0.0107 0.0309 0.0404 0.048 0.0556 ...\n $ lwr: num  0.00511 0.0268 0.03693 0.04493 0.0528 ...\n $ upr: num  0.0162 0.035 0.0439 0.0511 0.0584 ...\n```\n\n\n:::\n:::\n\n\n\n-   Add `fits` columns to the original data frame `df()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$fit <- fits$fit\ndf$upr <- fits$upr\ndf$lwr <- fits$lwr\n```\n:::\n\n\n\n\n## Cardinal model for temperature {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Lets plot the predicted versus observed values using the `plot()` function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(df$Temp, df$sqrtGR,xlab=\"Temperature\",ylab=\"sqrtGR\",\n     xlim=c(0,45), ylim=c(0,0.2))\npar(new=TRUE)\nplot(df$Temp, df$fit, col=\"blue\",xlab=\"\",ylab=\"\",\n     xlim=c(0,45), ylim=c(0,0.2), type=\"l\")\npar(new=TRUE)\nplot(df$Temp, df$upr, col=\"red\",xlab=\"\",ylab=\"\",\n     xlim=c(0,45), ylim=c(0,0.2), type=\"l\")\npar(new=TRUE)\nplot(df$Temp, df$lwr, col=\"red\",xlab=\"\",ylab=\"\",\n     xlim=c(0,45), ylim=c(0,0.2),  type=\"l\")\n```\n\n::: {.cell-output-display}\n![](SecondaryGrowthModelsFit_files/figure-html/plotPred-1.png){width=672}\n:::\n:::\n\n\n\n## Now is your Turn! {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n-   Fit Cardinal model for pH\n\n1.  Use the `CMPH()` function from `predmicror`\n\n2.  Use the dataset `ph` from `predmicror` (note: upload the dataset with `data(ph)`)\n\n3.  Use the model fitted to predict `sqrtGR` at $pH=7$\n\n## References {background-image=\"../images/background.png\" background-size=\"contain\"}\n\n\n\n---\nnocite: |\n  @brooks2012jawetz, @Ratkowsky1983, @McMeekin1993book, @Rosso1995, @Barron2019-handbook \n---\n\n\n\n::: {#refs}\n:::\n",
    "supporting": [
      "SecondaryGrowthModelsFit_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}